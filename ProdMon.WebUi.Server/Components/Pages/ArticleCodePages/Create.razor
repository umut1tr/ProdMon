@page "/articlecodes/create"
@using Microsoft.EntityFrameworkCore
@using ProdMon.Domain.Models
@inject IDbContextFactory<ProdMon.Infrastructure.Data.ProdMonDbContext> DbFactory
@inject NavigationManager NavigationManager

<PageTitle>Create</PageTitle>

<h1>Erstelle neue Artikelnummer</h1>

<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="ArticleCode" OnValidSubmit="AddArticleCode" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" role="alert" />
            <div class="mb-3">
                <label for="articlenumber" class="form-label">Artikelnummer:</label>
                <InputText id="articlenumber" @bind-Value="ArticleCode.ArticleNumber" class="form-control" aria-required="true" />
                <label for="articledescription" class="form-label">Beschreibung:</label>
                <InputText id="articledescription" @bind-Value="ArticleCode.ArticleDescription" class="form-control" aria-required="true" />
                <ValidationMessage For="() => ArticleCode.ArticleDescription" class="text-danger" />
            </div>
            <button type="submit" class="btn btn-primary">Erstellen</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/articlecodes">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private ArticleCode ArticleCode { get; set; } = new();

    private async Task AddArticleCode()
    {
        try
        {
            using var context = DbFactory.CreateDbContext();
            context.ArticleCodes.Add(ArticleCode);
            await context.SaveChangesAsync();
            NavigationManager.NavigateTo("/articlecodes");
        }
        catch (Exception ex)
        {
            Console.WriteLine($"An error occurred: {ex.Message}");
            // Optionally, display an error message to the user
        }
    }
}
